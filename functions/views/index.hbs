<!DOCTYPE html>
<html lang="en">
  <body>
    <fieldset>
      <legend>Drone fly zone violations</legend>
         <ol id="pilotList"></ol>
    </fieldset>
  </body>
  <script>
    // data format for a row
    function viewFormat(pilot) {
     return "Name: " + pilot.firstName + " " + pilot.lastName
        + " Email: " + pilot.email + " Phone number: " + pilot.phoneNumber 
        + " Closest distance to nest: " + pilot.closestDistanceToNest + " mm";
    }
    // page is fully loaded
    document.addEventListener('DOMContentLoaded', function () 
    { 
      const pilotList = document.getElementById("pilotList");
      const LIST_TYPE = "li";
      const UPDATE_TIME = 2000;
      const pilotListElements = pilotList.getElementsByTagName(LIST_TYPE);
      var response;
      var update;
      var index;
      var listItem;
      var timeStamp = "{{tranferData.timeStamp}}";

      // initial pilot list
      {{#each tranferData.pilots}}
        listItem = document.createElement(LIST_TYPE);
        listItem.innerText = viewFormat({
          firstName: "{{{this.firstName}}}",
          lastName:  "{{{this.lastName}}}",
          email:  "{{{this.email}}}",
          phoneNumber:  "{{{this.phoneNumber}}}",
          closestDistanceToNest: "{{{this.closestDistanceToNest}}}"
        });
        pilotList.appendChild(listItem);
      {{/each}}

      // reguest data from server every 2 seconds
      setInterval( function () 
      {
        // request data
        fetch('/api', {
          method: 'POST',
          headers: {'Content-Type': 'text/plain'},
          body: timeStamp
        }).then((response) => 
        {
          // get json
          response.json().then((update) =>
           {
            if (update.TimeStampTimeOut)
            {
              // remove all pilots
              for (index = 0; index < pilotListElements.length; index++) { 
                pilotListElements.item(index).remove();
                }
            }
            else {
              // remove old pilots from list
              update.removePilots.forEach((oldPilotEmail) => {
                // go through rows if row has oldPilotEmail, delete row
                for (index = 0; index < pilotListElements.length; index++) {
                  if (-1 !== pilotListElements.item(index).innerHTML.search(oldPilotEmail)) {
                    pilotListElements.item(index).remove();
                  }
                };
              });
            }
            // add new pilots to list
            update.addPilots.forEach((newPilot) => {
              listItem = document.createElement(LIST_TYPE);
              listItem.innerText = viewFormat(newPilot);
              pilotList.appendChild(listItem);
            });
            // update timeStamp
            timeStamp = update.timeStamp;
          });
        }).catch((error) => console.log(error));
      },UPDATE_TIME);
  });
  </script>
</html>